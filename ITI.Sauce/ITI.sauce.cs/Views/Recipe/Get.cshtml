@using ITI.Sauce.ViewModels

@model PaginingViewModel<List<RecipeViewModel>>
@section StyleSection{

} 
<link rel="stylesheet" href="~/Content/CSS/GeneralTable.css"/>

        <a asp-action="Add" asp-controller="Recipe" id="btnAdd">Add</a>
        
    <h2>Recipe Table</h2>
    
<table class="table">
  <tr>
   <th scope="col">Name In English</th>
    <th scope="col">Name In Arabic </th>
    <th scope="col">Price</th>
    <th scope="col">Good For</th>
    <th scope="col">Image</th>
    <th scope="col">Category</th>
    <th scope="col">Restaurant</th>
    <th  scope="col">Status</th>
    <th  scope="col">Actions</th>
  </tr>
    @foreach(var V in Model.Data)
{  
  <tr>
     <td scope="row">@V.NameEN</td>
   
    <td>@V.NameAR</td>
    <td>@V.Price</td>
    <td>@V.GoodFor</td>
    <td> <img src="@V.ImageUrl" width="100 px" height="100 px">   </td>
    <td>@V.CategoryID</td>
    <td>@V.RestaurantName</td>
    <td>@(@V.IsDeleted?"Rejected":"Accepted")</td>


    <td> <a asp-action="Update" asp-controller="Recipe" asp-route-Id="@V.ID">Update </a> |
        <a asp-action="Remove" asp-controller="Recipe" asp-route-Id="@V.ID">Reject</a>
        | <a asp-action="AcceptRecipe" asp-controller="Recipe" asp-route-Id="@V.ID">Accept</a>
    </td>

  </tr>
    }
</table>
@*<div>
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Search", new { pageIndex = page }),
        new X.PagedList.Web.Common.PagedListRenderOptions
        {
        DisplayItemSliceAndTotal = true,
        ContainerDivClasses = new[] { "navigation" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        })
    </div>
    <div>
    <script>
        $(document).ready(function() {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });
    </script>
</div>

*@
    
          