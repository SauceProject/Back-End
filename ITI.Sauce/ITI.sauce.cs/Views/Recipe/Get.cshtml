@using ITI.Sauce.ViewModels

@model PaginingViewModel<List<RecipeViewModel>>
<!DOCTYPE html>
<html>
    <head>
         <link rel="stylesheet" href="~/Content/CSS/VendorTable.css"/>
    <style>
        #btnAdd {
    width: 7%;
    background-color: #143444;
    color: #F6EE99;
    padding: 14px 20px;
    margin: 8px 0;
    border: none;
    border-radius: 4px;
    cu rsor: pointer;
    text-decoration:none;
    float:right;
}
td{
    width:30%;
    text-align:center;
}
    </style>
    </head>
    <body>
    <h2>Recipe Table</h2>
    <a asp-action="Add" asp-controller="Recipe" id="btnAdd">Add</a>
<table>
  <tr>
   <th >Name In English</th>
    <th>Name In Arabic </th>
    <th>Price</th>
    <th>Good For</th>
    <th>Image</th>
    <th>Actions</th>
  </tr>
    @foreach(var V in Model.Data)
{  
  <tr>
     <td>@V.NameEN</td>
   
    <td>@V.NameAR</td>
    <td>@V.Price</td>
    <td>@V.GoodFor</td>
    <td> <img src="@V.ImageUrl" width="100 px" height="100 px">   </td>
    <td>Update | Remove</td>

    <td><a asp-action="Get" asp-controller="Restaurant" asp-route-vendorID="@V.ID">Restaurant</a>
  </tr>
    }
</table>
@*<div>
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Search", new { pageIndex = page }),
        new X.PagedList.Web.Common.PagedListRenderOptions
        {
        DisplayItemSliceAndTotal = true,
        ContainerDivClasses = new[] { "navigation" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        })
    </div>
    <div>
    <script>
        $(document).ready(function() {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });
    </script>
</div>
*@

    
            
    </body>
</html>