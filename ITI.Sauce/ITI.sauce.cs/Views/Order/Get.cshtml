
@using ITI.Sauce.ViewModels


@model PaginingViewModel<List<OrderViewModel>>


<link rel="stylesheet" href="~/Content/CSS/Order.css"/>
<h2>Order</h2>
    <a asp-action="Add" asp-controller="Order" id="btnAdd">Add</a>


<table>
  <tr>
    <th>ID</th>
    <th>NameEN</th>
    <th>NameAR</th>
    <th>Register Date</th>
  </tr>
  <tr>
          @foreach(var o in Model.Data)
{
    <td>@o.ID</td>
    <td>@o.NameEN</td>
    <td>@o.NameAR</td>
    <td>@o.registerDate</td>
}
  </tr>
  
</table>
@*<div>
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Search", new { pageIndex = page }),
        new X.PagedList.Web.Common.PagedListRenderOptions
        {
        DisplayItemSliceAndTotal = true,
        ContainerDivClasses = new[] { "navigation" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        })
    </div>
    <div>
    <script>
        $(document).ready(function() {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });
    </script>
</div>
*@


